export declare function getInput(name: string): string;
export declare function getInput(name: string, options: {
    optional: true;
}): string | undefined;
export declare function getInput(name: string, options: {
    optional: false;
}): string;
export declare function getInput<Optional extends boolean>(name: string, options: {
    optional?: Optional;
}): Optional extends true ? string | undefined : string;
export declare function getInput<Output>(name: string, options: {
    type: (value: string) => Output;
}): Output;
export declare function getInput<Output>(name: string, options: {
    optional: true;
    type: (value: string) => Output;
}): Output | undefined;
export declare function getInput<Output>(name: string, options: {
    optional: false;
    type: (value: string) => Output;
}): Output;
export declare function getInput<Optional extends boolean, Output>(name: string, options: {
    optional?: Optional | undefined;
    type: (value: string) => Output;
}): Optional extends true ? undefined | Output : Output;
export default getInput;
export declare function string(value: string): string;
export declare function number(value: string): number;
export declare function integer(value: string): number;
export declare const BOOLEAN_VALUES: Record<string, boolean>;
export declare function boolean(value: string): boolean;
export declare function listOf<T>(type: (value: string) => T, { separator }?: {
    separator?: string | RegExp;
}): (value: string) => T[];
